{"version":3,"sources":["components/translation/hello.js","components/translation/thank-you.js","modules/form/form.js","middleware/api.js","pages/home/home.js","helpers/constants.js","pages/home/services/action.js","pages/home/index.js"],"names":["withTranslation","t","validate","email","pattern","message","empty","error","name","mask","tel","description","check","errors","valid","form","key","field","this","length","test","Forma","state","handleChange","e","target","value","match","setState","validation","onBlur","copy","Object","keys","handleSubmit","preventDefault","data","console","log","onSubmit","onChange","type","placeholder","Component","connect","API_ROOT","api","get","endpoint","axios","post","put","delete","Home","props","fetchData","map","element","_id","src","path","alt","mapDispatchToProps","dispatch","a","response","HOME_FETCH_DATA_SUCCESS","payload","homeReducer"],"mappings":"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","file":"static/js/7.cfbd72a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst Hello = ({t}) => {\r\n  return (\r\n    <div>\r\n      {t('hello.label')}\r\n      <div>{t('title')}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Hello);\r\n","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst ThankYou = ({t}) => {\r\n  return (\r\n    <div>\r\n      {t('thankyou.label')}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ThankYou);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './form.scss';\r\n\r\n\r\nconst validate = {\r\n  email: {\r\n    pattern: /^\\b[A-Z0-9._%-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\b$/i,\r\n    message: {\r\n      empty: 'Введите ваш Email',\r\n      error: 'Email не валидный'\r\n    }\r\n  },\r\n  name: {\r\n    pattern: /.{2,}/i,\r\n    mask: /^[a-zA-Z\\s]*$/,\r\n    message: {\r\n      empty: 'Введите ваше имя',\r\n      error: 'Не меньше 2 символов'\r\n    }\r\n  },\r\n  tel: {\r\n    pattern: /.{2,}/i,\r\n    mask: /^[\\d]*$/,\r\n    message: {\r\n      empty: 'Введите ваш телефон',\r\n      error: 'Телефон не валидный'\r\n    }\r\n  },\r\n  description: {\r\n    pattern: /.{2,}/i,\r\n    message: {\r\n      empty: 'Введите ваш запрос',\r\n      error: 'Не меньше 10 и не больше 100 символов'\r\n    }\r\n  },\r\n  check(message) {\r\n    const errors = {};\r\n    let valid = true;\r\n\r\n    const form = { ...message };\r\n    delete form.errors;\r\n\r\n    for (const key in form) {\r\n      const field = [this[key]][0];\r\n\r\n      if (form[key].length === 0) {\r\n        errors[key] = field.message.empty;\r\n        valid = false;\r\n      } else if (!field.pattern.test(form[key])) {\r\n        valid = false;\r\n        errors[key] = field.message.error;\r\n\r\n      } else {\r\n        errors[key] = '';\r\n      }\r\n    }\r\n\r\n    return { errors, valid };\r\n  }\r\n};\r\n\r\n\r\nclass Forma extends Component {\r\n  state = {\r\n    email: '',\r\n    tel: '',\r\n    name: '',\r\n    description: '',\r\n    errors: {}\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    // init\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    if (!value.match(validate[name].mask)) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ [name]: value });\r\n\r\n  }\r\n\r\n  // валидация формы\r\n  validation = () => {\r\n    const check = validate.check(this.state);\r\n\r\n    this.setState({ errors: check.errors });\r\n    return check.valid;\r\n  }\r\n\r\n  onBlur = ({target}) => {\r\n    const check = validate.check({[target.name]: this.state[target.name]});\r\n    const copy = {...this.state.errors};\r\n    const field = Object.keys(check.errors)[0];\r\n    copy[field] = check.errors[field];\r\n    this.setState({ errors: copy });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const valid = this.validation();\r\n\r\n    if (valid) {\r\n      const data = { ...this.state };\r\n      delete data.errors;\r\n      console.log(data);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <input value={this.state.name} onBlur={this.onBlur} onChange={this.handleChange} type=\"text\" name=\"name\" placeholder=\"name\" />\r\n            {this.state.errors.name && <span>{this.state.errors.name}</span>}\r\n          </div>\r\n          <div>\r\n            <input value={this.state.tel} onBlur={this.onBlur} onChange={this.handleChange} type=\"text\" name=\"tel\" placeholder=\"tel\" />\r\n            {this.state.errors.tel && <span>{this.state.errors.tel}</span>}\r\n          </div>\r\n          <div>\r\n            <input value={this.state.email} onBlur={this.onBlur} onChange={this.handleChange} type=\"text\" name=\"email\" placeholder=\"email\" />\r\n            {this.state.errors.email && <span>{this.state.errors.email}</span>}\r\n          </div>\r\n          <div>\r\n            <input value={this.state.description} onBlur={this.onBlur} onChange={this.handleChange} type=\"text\" name=\"description\" placeholder=\"description\" />\r\n            {this.state.errors.description && <span>{this.state.errors.description}</span>}\r\n          </div>\r\n          <button>Отправить</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Forma);\r\n","import axios from 'axios';\r\n\r\nconst API_ROOT = 'http://localhost:5500/api';\r\n\r\nconst api = {\r\n  get: endpoint => axios.get(`${API_ROOT}/${endpoint}`),\r\n  post: (endpoint, data) => axios.post(`${API_ROOT}/${endpoint}`, data),\r\n  put: (endpoint, data) => axios.put(`${API_ROOT}/${endpoint}`, data),\r\n  delete: endpoint => axios.delete(`${API_ROOT}/${endpoint}`)\r\n};\r\n\r\nexport default api;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { staticFiles } from '../../helpers/constants';\r\nimport Hello from '../../components/translation/hello';\r\nimport Thank from '../../components/translation/thank-you';\r\nimport Form from '../../modules/form';\r\nimport { fetchData } from './services/action';\r\n\r\nclass Home extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.data.map(element => {\r\n          return (\r\n            <div key={element._id}>\r\n              <img src={`${staticFiles}${element.path}`} alt=\"\" />\r\n            </div>\r\n          );\r\n        })}\r\n        Home\r\n        <hr />\r\n        <Form />\r\n        <Hello />\r\n        <Thank />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.homeReducer.data\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchData\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","const MODE = 'developer'; // production\r\n\r\nexport const API_ROOT = 'http://localhost:5500/api';\r\n\r\n// используеться только для static file в режиме разработки на реальном хостинге должно быть пустая строка\r\nexport const staticFiles = MODE === 'developer' ? 'http://localhost:5500/' : '';\r\n","import api from '../../../middleware/api';\r\nimport {\r\n  HOME_FETCH_DATA_SUCCESS\r\n} from './constants';\r\n\r\nexport const fetchData = () => async dispatch => {\r\n  const response = await api.get('upload');\r\n  dispatch({ type: HOME_FETCH_DATA_SUCCESS, payload: response.data });\r\n};\r\n","export {default} from './home';\r\n"],"sourceRoot":""}